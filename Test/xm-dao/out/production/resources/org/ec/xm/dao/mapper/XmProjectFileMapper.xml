<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ec.xm.dao.mapper.XmProjectFileMapper">
    <resultMap id="BaseResultMap" type="org.ec.xm.entity.XmProjectFile">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="size" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="type" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="path" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="organization_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="task_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT"/>
            <arg column="source" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="creator_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="funding_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="created_at" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="updated_at" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>

    <resultMap id="FileList" type="org.ec.xm.dto.XM0203.XM0203A14DTO">
        <id column="id" property="fileId"></id>
        <result column="source" property="source"></result>
        <result column="size" property="size"></result>
        <result column="name" property="name"></result>
        <result column="type" property="type"></result>
        <result column="status" property="status"></result>
        <result column="path" property="path"></result>
    </resultMap>

    <resultMap id="FileListByTask" type="org.ec.xm.dto.XM0207.XM0207A03DTO">
        <id column="id" property="fileId"></id>
        <result column="size" property="fileSize"></result>
        <result column="name" property="fileName"></result>
        <result column="type" property="fileType"></result>
        <result column="path" property="filePath"></result>
    </resultMap>

    <resultMap id="FileListAndStatus" type="org.ec.xm.dto.XM0209.XM0209A03DTO">
        <id column="id" property="fileId"></id>
        <result column="status" property="status"></result>
        <result column="size" property="fileSize"></result>
        <result column="name" property="fileName"></result>
        <result column="type" property="fileType"></result>
        <result column="path" property="filePath"></result>
    </resultMap>
    <resultMap id="fileXXBaseRuest" type="org.ec.xm.dto.XM0202.XM0202A05DTO">
        <result column="source" property="source"></result>
        <result column="path" property="path"></result>
        <result column="name" property="name"></result>
        <result column="type" property="type"></result>
    </resultMap>
    <resultMap id="allFileXXBaseRuest" type="org.ec.xm.dto.XM0210.XM0210A18DTO">
        <result column="source" property="source"></result>
        <result column="path" property="path"></result>
        <result column="name" property="name"></result>
        <result column="type" property="type"></result>
    </resultMap>
    <resultMap id="allFundingIds" type="java.lang.Integer"></resultMap>
    <delete id="deleteFilebByFundingId">
        delete from xm_project_file where  funding_id=#{id}
    </delete>
    <select id="getAllProjectFundingId" resultMap="allFundingIds">
        select funding_id from xm_funding_detail where project_id=#{id}
    </select>
    <select id="getPriovincFileList" parameterType="org.ec.xm.dto.XM0210.XM0210A18InputDTO"
            resultMap="allFileXXBaseRuest">

SELECT
	NAME,
	path,
	source,
	type
FROM
	xm_project_file a,(select status from xm_project where id =(select project_id from xm_funding_detail where funding_id =#{projectId} and organization_id=#{organizationId})) AS b
WHERE
	funding_id =#{projectId}
 and a.status=true
 and b.status=true
  </select>
    <select id="getAllFileList" parameterType="org.ec.xm.dto.XM0210.XM0210A18InputDTO" resultMap="allFileXXBaseRuest">
SELECT
	source,
	NAME,
	path,
	type
FROM
	xm_project_file
WHERE
	funding_id IN (
		SELECT
			funding_id
		FROM
			xm_funding_detail
		WHERE
			funding_id IN (
				SELECT
					id
				FROM
					xm_funding
				WHERE
					project_id = #{projectId}
				AND organization_id = #{organizationId}
              				/*AND money > 0*/
			)
	)
  </select>
    <select id="getMoneyDownFile" parameterType="org.ec.xm.dto.XM0202.XM0202A05InputDTO" resultMap="fileXXBaseRuest">
       select source,path,name,type from xm_project_file where funding_id=#{fundingId}
  </select>
    <delete id="deleteFromProjectFile" parameterType="java.lang.Integer">
    delete from xm_project_file
    where task_id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from xm_project_file
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="org.ec.xm.entity.XmProjectFile">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into xm_project_file (size, name, type,
        path, organization_id, task_id,
        status, creator_id, funding_id,
        created_at, updated_at, source)
        values (#{size,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
        #{path,jdbcType=VARCHAR}, #{organizationId,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER},
        #{status,jdbcType=TINYINT}, #{creatorId,jdbcType=INTEGER}, #{fundingId,jdbcType=INTEGER},
        #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}), #{source,jdbcType=VARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="org.ec.xm.entity.XmProjectFile">
    update xm_project_file
    set size = #{size,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      organization_id = #{organizationId,jdbcType=INTEGER},
      task_id = #{taskId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      creator_id = #{creatorId,jdbcType=INTEGER},
      funding_id = #{fundingId,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      source = #{sorce,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, size, name, type, path, organization_id, task_id, status, creator_id, 
    funding_id, created_at, updated_at, source
    from xm_project_file
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, size, name, type, path, organization_id, task_id, status, creator_id, 
    funding_id, created_at, updated_at, source
    from xm_project_file
  </select>

    <insert id="fileUpLoad" parameterType="org.ec.xm.entity.XmProjectFile">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into xm_project_file (size, name, type,
        path, organization_id,
        status, funding_id, source,creator_id)
        values (#{size,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
        #{path,jdbcType=VARCHAR}, #{organizationId,jdbcType=INTEGER},
        #{status,jdbcType=TINYINT}, #{fundingId,jdbcType=INTEGER},
        #{source,jdbcType=VARCHAR},#{creatorId,jdbcType=INTEGER})
    </insert>

    <select id="getFileList" parameterType="java.lang.Integer" resultMap="FileList">
    select id, size, name, type, status, source,path
    from xm_project_file
    where funding_id = #{id,jdbcType=INTEGER}
  </select>

    <insert id="fileAddApiByTask" parameterType="org.ec.xm.entity.XmProjectFile">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into xm_project_file (size, name, type,path, organization_id, task_id, creator_id)
        values (#{size,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
        #{path,jdbcType=VARCHAR}, #{organizationId,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER},
        #{creatorId,jdbcType=INTEGER})
    </insert>

    <select id="getFileListByTaskId" parameterType="java.lang.Integer" resultMap="FileListByTask">
    select id, size, name, type,path
    from xm_project_file
    where task_id = #{arg0} AND organization_id = #{arg1}
  </select>

    <insert id="upLoadFile" parameterType="org.ec.xm.entity.XmProjectFile">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into xm_project_file (size, name, type,
        path, organization_id, status, task_id, creator_id,source)
        values (#{size,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
        #{path,jdbcType=VARCHAR}, #{organizationId,jdbcType=INTEGER},
        1, #{taskId,jdbcType=INTEGER},
        #{creatorId,jdbcType=INTEGER},
        '区级')
    </insert>

    <select id="getFileListAndStatus" parameterType="java.lang.Integer" resultMap="FileListAndStatus">
        select id, size, name, type,status,path
        from xm_project_file
        where task_id = #{arg0} AND organization_id = #{arg1}
    </select>

    <update id="changeStatus" parameterType="org.ec.xm.entity.XmProjectFile">
    update xm_project_file
    set status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <update id="changeFileById" parameterType="org.ec.xm.entity.XmProjectFile">
        update xm_project_file
        set status = #{status,jdbcType=TINYINT},
        source = #{source,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>